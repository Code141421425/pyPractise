# https://www.runoob.com/python/python-exercise-example21.html
# 猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，
# 又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。

##分析
# 大体分析：要不就逆向推，要不就函数式编程.
# 逆向：如果最后还剩1个，则第9天吃的时候，需要有 （1+1）*2，所以，每天之前都有前一天+1的两倍个
# 核心算法：将根根据几次，循环输入+1翻倍


def anti_eat(last,times):
    sum = last
    for i in range(times):
        sum +=1
        sum *=2
    return sum

print( anti_eat(1,9))


#总结：
#思路一致，但是总数的初始值设错了！